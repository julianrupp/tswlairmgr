New features in version 2
=========================

- New code base
	The code has been completely rewritten.
	Main priority for the first version was speed; I wanted to finish it as soon as possible, which I did in 5 days. Naturally, throwing stuff together this fast does have its drawbacks â€“ the resulting code was tightly interwoven and very unflexible regarding possible code changes. Besides, I've come to notice a few suboptimal design decisions using the first version, the rewrite gave me the opportunity to change them.
	The second version was in development for 18 days [TODO thu aug6]. The code now is partitioned and encapsulated way better, making it easier to change existing functionality or extend it with new functionality, although there still is some room for improvement in the design. According to the source code metrics graph plugin on my Stash server, the code now has about 21 KSLOC [TODO], up from about 4.5 KSLOC in version 1.1.2.
	
	- Module system:
		Developers can (halfway) easily add new functionality by writing a module.
	
	- Localization system:
		Developers can easily localize their modules in multiple languages.
		
		The game data localization (region/zone/lair, mission, boss and fragment names) has been pulled from the game in all three languages the game is localized for: English, German and French.
		The Organizer module, containing the main functionality, has been localized in English and German by myself; Rexxars from my cabal In Vino Veritas contributed the French translation.
	
	- The menu bar has been changed to include a language and module switcher.
	
	- Persistent state system:
		Developers can easily make the internal state of their module persistent, so that when an user accidentally reloads the page, the webapp does not reset. This also gives users the ability to share the current state of the webapp in their browser with other people by copying the page's URL as a nice side effect, although the URLs get quite long fairly fast. Modules have to take care of version-checking their individual persistent state by themselves for backwards-compatibility (using an older link with a newer version of the webapp).
		
		For people interested in what the gibberish in the URLs represents: The persistent state data is internally held as a complex nested data structure with separate parent nodes for each module. This data structure is serialized to JSON, then compressed with LZW, and the output is then encoded with a special variant of Base64 (- and _ instead of + and / characters; the superfluous = padding characters at the end get stripped automatically). For good measure, a Base36 encoded CRC32 checksum of the LZW compressed payload is appended after the dot.
	
	- Core MVC components:
		The webapp provides MVC components for use by module developers. Currently there is just one, which, given a boss or fragment data class instance, displays/renders an item icon.

- Organizer
	The main functionality of the webapp is now located in the Organizer module.
	
	- Code
		- The code has been changed to be a lot more flexible for integrating possible future game content. For example, lairs can technically include an arbitrary number of bosses. The only limitation is the width of the pick table, as you can only put in so many item icon columns before exceeding the overall module width.
	
	- Interface
		- Help / How-to
			The extensive guide with screenshots has been removed. Instead, the module now includes somewhat short help text in places where the interface/behavior might not be self-explanatory. If user feedback on this is mostly negative, I might bring an updated version of the old long guide back into the module.
		
		- Lair selection menu
			The menu has been moved out of the menu bar as it is now reserved for the system.
		
		- Boss fragment counts table
			The + and - buttons' positions are fixed now and don't float around the numbers in the middle, which should make it less annoying entering fragment counts greater than 9. You previously had to move your mouse to follow the button moving to the right.
		
		- Participants / Pick table
			- The two side-by-side blocks have been merged.
				- Checkboxes for declaring a player's (in)ability to turn in particular missions have been removed; now you can click the respective fragment icon to toggle this.
			
			- The "check off received fragments" feature has been removed.
				It turned out to not be really useful. From my experiences being a fragment holder using the webapp in the past few months, you hardly have any time to check off each fragment after someone has traded you his set of mission rewards - as soon as the trade window closes the next one pops up instantly usually, and you still have to manually stack the just-received fragments or you are very likely running out of inventory space. I would be forced to make people wait longer for me to accept trades if I wanted to actually check off the fragments.
			
			- Overly restrictive participant name rejection has been made more lenient.
				The only requirements now are that names be unique, are at least one character long and only consist of the characters A-Z, a-z, 0-9, the dash (-) and the underscore (_).
			
			- You can now mass-import player names from an ingame chat log excerpt.
				You can copy any number of chat log lines from the ingame chat and paste it in the webapp. Any speaker found within this chat log excerpt will be added as a participant. So if you're lazy, tell your group to put an X or something in chat, then copy all following chat messages into the app.
			
		- Output
			- You can now choose a separate localization to use when generating the chat script, independent of what language the webapp has been set to.
				This is meant for people using the German or French client who feel more comfortable using TSW Lair Manager in their native language, but are doing lairs with a mixed-language group of players who prefer or can only understand English.
				
				- The default setting is English, and if you change the webapp's language via the menu bar, it will not automatically change the chat script localization setting.
			
			- You can now choose a sorting style for the contents of the chat script.
				The new default is sorting by participant, where each participant has all his assigned fragments clustered together so people receiving the script don't have to scroll the chat log that much. Previously, every participant had to find his name thrice (as often as how many bosses there are) in the usually quite long output list; now they only have to find their name once.
				
				The old sorting style of sorting by boss/mission is still available.

- Lookup
	There is another module with new functionality: Looking up fragments and bosses.
	You can select any lair or regional boss and any lair or regional fragment from a list and immediately see associated information: From what boss(es) does the fragment drop, what boss is this fragment from, what regional fragments does this lair boss drop, along with links to related things like other bosses from the lair the currently selected boss/fragment is from.
	
	Especially the regional fragment drop info should be very useful; thanks to Dott & Jermaine who provided me with a drop table with arduously gathered data!